{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e316373.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Todo List</h1>\r\n      <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;\r\n","import React, {Component} from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component{\r\n\r\n  state = {\r\n    term: ''\r\n  };\r\n\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({term});\r\n    this.props.onSearchChange(term);\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <input type=\"text\"\r\n               className=\"form-control search-input\"\r\n               placeholder=\"type to search\"\r\n               value = {this.state.term}\r\n                onChange={this.onSearchChange}/>\r\n    );\r\n  }\r\n}\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;\r\n","import React, {Component} from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n    render() {\r\n\r\n        const { label, onDeleted,\r\n                onToggleImportant,\r\n                onToggleDone,\r\n                important, done} = this.props;\r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if (important)  {\r\n            classNames += '  important';\r\n        }\r\n\r\n        return (\r\n            <span className={classNames}>\r\n              <span\r\n                  className=\"todo-list-item-label\"\r\n                  onClick={ onToggleDone }>\r\n                {label}\r\n              </span>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-success btn-sm float-right\"\r\n                onClick={onToggleImportant}>\r\n        <i className=\"fa fa-exclamation\"/>\r\n      </button>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-danger btn-sm float-right\"\r\n                onClick={onDeleted}>\r\n        <i className=\"fa fa-trash-o\"/>\r\n      </button>\r\n    </span>\r\n        );\r\n    }\r\n}\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem\r\n            {...itemProps }\r\n            onDeleted = {() => onDeleted(id)}\r\n            onToggleImportant = {() => onToggleImportant(id)}\r\n            onToggleDone = {() => onToggleDone(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"list-group todo-list\">\r\n      { elements }\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;\r\n","import React, { Component} from 'react';\r\nimport './item-status-filter.css';\r\nexport default class ItemStatusFilter extends Component{\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'}\r\n    ];\r\n\r\n    render() {\r\n\r\n        const {filter, onFilterChange} = this.props;\r\n\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return(\r\n                <button type=\"button\"\r\n                        className={`btn ${clazz}`}\r\n                        key={name}\r\n                        onClick={() => onFilterChange(name)}>\r\n                    {label}\r\n                </button>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import ItemAddForm from \"./item-add-form\";\r\n\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                    onSubmit={this.onSubmit}>\r\n                <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        onChange={this.onLabelChange}\r\n                        placeholder=\"What needs to be done\"\r\n                        value = {this.state.label}/>\r\n                <button className=\"btn btn-outline-secondary\">\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import App from './app';\r\n\r\nexport default App;\r\n","import React, {Component} from 'react';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from \"../item-add-form\";\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink Coffee'),\r\n            this.createTodoItem('Make Awesome App'),\r\n            this.createTodoItem('Have a lunch')\r\n        ],\r\n        term: '',\r\n        filter: 'all' //all, active, done\r\n    };\r\n\r\n    createTodoItem (label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        })\r\n    };\r\n\r\n    addItem = (text) => {\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({todoData}) => {\r\n            const newArr = [\r\n                ...todoData,\r\n                newItem\r\n            ];\r\n\r\n            return {\r\n                todoData: newArr\r\n            };\r\n        });\r\n    };\r\n\r\n    toggleProperty (arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = {...oldItem,\r\n            [propName]: !oldItem[propName]};\r\n\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        });\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        });\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n      this.setState({term});\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter});\r\n    };\r\n\r\n    search(items, term) {\r\n        if (term.length === 0){\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label\r\n                .toLowerCase()\r\n                .indexOf(term.toLowerCase()) > -1;\r\n        })\r\n    }\r\n\r\n    filter(items, filter) {\r\n        switch(filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { todoData, term, filter } = this.state;\r\n\r\n        const visibleItems = this.filter(\r\n            this.search(todoData, term), filter);\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={todoCount} done={doneCount} />\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel\r\n                        onSearchChange = {this.onSearchChange}/>\r\n                    <ItemStatusFilter\r\n                        filter={filter}\r\n                        onFilterChange={this.onFilterChange}/>\r\n                </div>\r\n\r\n                <TodoList\r\n                    todos={visibleItems}\r\n                    onDeleted = { this.deleteItem}\r\n                    onToggleImportant = {this.onToggleImportant}\r\n                    onToggleDone = {this.onToggleDone}\r\n                />\r\n                    <ItemAddForm onItemAdded={this.addItem} />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root'));\r\n"],"sourceRoot":""}